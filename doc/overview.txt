Primary Goals:
* Be able to develop a cocoa app in scala
* Be able to instantiate and pass messages to obj-c objects
* Be able to implement obj-c interfaces and receive messages

Issues:
* Obj-c doesn't support generics, so collection types lack sub-type information
* Obj-c mixes reference and pass-by-value types together:
    - need a way to detect and automatically translate pass-by-value values (such as NSRect)
    
    
Naming conventions in scala:
* root package is cocoa
* sub-package per framekwork
* simple class names are the same
* protocol names start with $
* message selectors are translated to method names by replacing ':' with '_' and trimming any trailing '_'
* trait definitions for the class containing class methods ends with '_class'
